@using MbmStore.Models;
@model IEnumerable<Product>

@{
    ViewBag.Title = "Catalog";
}

<style>
td  {
    padding-bottom: .5em; 
    padding-left: .2em;
}
</style>

@helper RenderBook(Book book)
{
    <tr>
        <td width="150"><img src="/content/images/@book.ImageUrl" width="150" alt="@book.Title" /></td>
        <td valign="top">
            <strong>Title:</strong> @book.Title<br />
            <strong>Author:</strong> @book.Author<br />
            <strong>Price:</strong> @book.Price.ToString("0.00")<br />
            <strong>Publisher:</strong> @book.Publisher @String.Format("({0})", book.Published)<br />
            <strong>ISBN:</strong> @book.ISBN<br />
        </td>
        <td width="100" valign="bottom">
            @using (Html.BeginForm("AddToCart", "Cart"))
            {
                @Html.Label("Qty: ") @Html.DropDownList("Quantity", Enumerable.Range(1, 10).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }))<br />
                @Html.Hidden("ProductId", book.ProductId)
                @Html.Hidden("ProductType", book.GetType().ToString())
                @Html.Hidden("returnUrl", Request.Url.PathAndQuery)
                <input type="submit" class="btn btn-success" value="Add to cart" />
            }
        </td>
    </tr>
}

@helper RenderCD(MusicCD cd)
{
    <table width="100%">
        <tr>
            <td width="150"><img src="/content/images/@cd.ImageUrl" width="150" alt="@cd.Title" /></td>
            <td valign="top">
                <strong>Album:</strong> @cd.Title<br />
                <strong>Artist:</strong> @cd.Artist<br />
                <strong>Price:</strong> @cd.Price.ToString("0.00")<br />
                <strong>Publisher:</strong> @cd.Label (@cd.Released)<br />
            </td>
            <td width="100" valign="bottom">
                @using (Html.BeginForm("AddToCart", "Cart"))
                {
                    @Html.Label("Qty: ") @Html.DropDownList("Quantity", Enumerable.Range(1, 10).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }))<br />
                    @Html.Hidden("ProductId", cd.ProductId)
                    @Html.Hidden("ProductType", cd.GetType())
                    @Html.Hidden("returnUrl", Request.Url.PathAndQuery)
                    <input type="submit" class="btn btn-success" value="Add to cart" />
                }
            </td>
        </tr>
        <tr>
            <td colspan=3>
                <strong>Tracks:</strong>
                <ul style="list-style:decimal; list-style-position:inside;">
                    @foreach (Track track in cd.Tracks)
                    {
                        <li>@track.Title (@track.Composer) @track.Length.Minutes:@track.Length.Seconds.ToString("00")</li>
                    }
                </ul>
                @if (cd.GetPlayingTime().Hours > 0)
                {
                    <strong>Total playing time:</strong> @cd.GetPlayingTime().ToString(@"hh\:mm\:ss")
                }
                else
                {
                    <strong>Total playing time:</strong> @cd.GetPlayingTime().ToString(@"mm\:ss");
                }
            </td>
        </tr>
    </table>
    <br />
}

@helper RenderMovie(Movie movie)
{
    <tr>
        <td width="150"><img src="/content/images/@movie.ImageUrl" width="150" alt="@movie.Title" /></td>
        <td valign="top">
            <strong>Title:</strong> @movie.Title<br />
            Director: @movie.Director<br />
            Price: @String.Format("{0:0.00}", movie.Price)
        </td>
        <td width="100" valign="bottom">
            @using (Html.BeginForm("AddToCart", "Cart"))
            {
                @Html.Label("Qty: ") @Html.DropDownList("Quantity", Enumerable.Range(1, 10).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }))<br />
                @Html.Hidden("ProductId", movie.ProductId)
                @Html.Hidden("ProductType", movie.GetType())
                @Html.Hidden("returnUrl", Request.Url.PathAndQuery)
                <input type="submit" class="btn btn-success" value="Add to cart" />
            }
        </td>
    </tr>
}

<h2>Products</h2>

<div class="body-content">
    <table style="width:100%">
        <tr>
            <td>
                @Html.ActionLink("View Cart", "Index", "Cart", new { returnUrl = Request.Url.PathAndQuery }, new { @class = "btn btn-primary" })
            </td>
        </tr>
        <tr>
            <td>
                <h2>The Books</h2>
                <table width="100%">
                    @foreach (Book book in Model.OfType<Book>().ToList())
                    {
                        @RenderBook(book)
                    }
                </table>
            </td>
        </tr>
        <tr>
            <td>
                <h2>The Music CDs</h2>
                @foreach (MusicCD cd in Model.OfType<MusicCD>().ToList())
                {
                    @RenderCD(cd)
                }
            </td>
        </tr>
        <tr>
            <td>
                <h2>The Movies</h2>
                <table width="100%">
                    @foreach (Movie movie in Model.OfType<Movie>().ToList())
                    {
                        @RenderMovie(movie)
                    }
                </table>
            </td>
        </tr>
    </table>
</div>

